
path:
  /api/roles/:
    get:
      tags:
        - Role
      description: Return roles available to users
      produces:
        - application/json
      parameters:
        - name: x-auth-token
          in: header
          description: user token required
          schema:
            type: string
          required: true
      responses:
        200:
          description: all users are retrieved.
          schema:
            type: object
            properties:
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2U5YjNjZTNjZjc3YTIzMjg3NGViNTEiLCJpc0FkbWluIjpmYWxzZSwiaXNMb2dnZWQiOnRydWUsInJvbGUiOiI1Y2RjMmQ1MTQ2NWJiNDRkM2E5MGMwMmMiLCJpYXQiOjE1NTg4MTk3OTF9.NH-CzRu4JcCou7gXJ40GDUtjeJRde9pWfsQ-fL_EM1s"
              result:
                type: array
                items: 
                  $ref: "#/definitions/role"
        400:
         description: Bad Request
         schema:
           $ref: "#/definitions/error-message"
    post:
      tags:
        - Role
      description: Create roles to be used
      produces:
        - application/json
      parameters:
        - name: x-auth-token
          in: header
          description: user token required
          schema:
            type: string
          required: true
        - name: payload
          in: body
          description: payload to create role object
          schema:
            type: object
            properties:
              title:
                type: string
                example: critics
              readAll:
                type: boolean
                example: true
              writeAll:
                type: boolean
                example: false

      responses:
        200:
          description: all users are retrieved.
          schema:
            type: object
            properties:
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2U5YjNjZTNjZjc3YTIzMjg3NGViNTEiLCJpc0FkbWluIjpmYWxzZSwiaXNMb2dnZWQiOnRydWUsInJvbGUiOiI1Y2RjMmQ1MTQ2NWJiNDRkM2E5MGMwMmMiLCJpYXQiOjE1NTg4MTk3OTF9.NH-CzRu4JcCou7gXJ40GDUtjeJRde9pWfsQ-fL_EM1s"
              result: 
                $ref: "#/definitions/role"
        400:
         description: Bad Request
         schema:
           $ref: "#/definitions/error-message"
        401:
         description: Unauthorized 
         schema:
           $ref: "#/definitions/error-message"
        403:
         description: Forbidden
         schema:
           $ref: "#/definitions/error-message"

  /api/roles/{id}:
    get:
      tags:
        - Role
      description: This return a Role if Role is not restricted to user
      produces:
        - application/json
      parameters:
        - name: x-auth-token
          in: header
          schema:
            type: string
        - name: id
          description: role id
          in: path
          schema:
            type: string
            example: 43edc49a9D8BEfac83ca0cAb
      responses:
        200:
          description: all users are retrieved.
          schema:
            type: object
            properties:
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2U5YjNjZTNjZjc3YTIzMjg3NGViNTEiLCJpc0FkbWluIjpmYWxzZSwiaXNMb2dnZWQiOnRydWUsInJvbGUiOiI1Y2RjMmQ1MTQ2NWJiNDRkM2E5MGMwMmMiLCJpYXQiOjE1NTg4MTk3OTF9.NH-CzRu4JcCou7gXJ40GDUtjeJRde9pWfsQ-fL_EM1s"
              result:            
                $ref: "#/definitions/role"
        400:
         description: Bad Request
         schema:
           $ref: "#/definitions/error-message"
        401:
          description: Unauthorized User
          schema:
            $ref: "#/definitions/error-message"
        404:
         description: user not found
         schema:
           $ref: "#/definitions/error-message"

    put:
      tags:
        - Role
      description: Edit an existing Document
      produces:
        - application/json
      parameters:
        - name: id
          description: role id
          in: path
          schema:
            type: string
            example: 43edc49a9D8BEfac83ca0cAb
        - name: x-auth-token
          in: header
          schema:
            type: string
          required: true
        - name: Edit Payload
          description: Payload used for creating document
          in: body
          schema:
            type: object
            properties:
              title: 
                type: string
                example: Document Title
              content:
                type: string
                example: Document Content
              access:
                type: string
                enum: [public, private, role]
              categoryId:
                type: string
                example: 239ca98e7f7d09b9a9ee97d6

definitions:
  role:
    type: object
    properties:
      _id: 
        type: string
        example: 5cb5c223edf5bf89d02378b4
      title: 
        type: string
        example: regular
      writeAll:
        type: boolean
        example: false
      readAll:
        type: boolean
        example: false


